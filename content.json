{"meta":{"title":"Hannah Dong","subtitle":"Live well, love lots, and laugh often.","description":null,"author":"Hannah Dong","url":"http://yoursite.com/child"},"pages":[],"posts":[{"title":"","slug":"Aliyun1","date":"2017-05-04T14:06:09.000Z","updated":"2017-05-04T14:06:09.000Z","comments":true,"path":"2017/05/04/Aliyun1/","link":"","permalink":"http://yoursite.com/child/2017/05/04/Aliyun1/","excerpt":"","text":"##1、什么是云计算？“云计算”是使用互联网接入存储或者运行在服务器端的应用、数据或者服务。 2、云计算分几层？分为IaaS(基础设施即服务)、PaaS(平台即服务)、SaaS(软件即服务)。基础设施在最下端，平台在中间，软件在顶端。IaaS公司会提供场外服务器、存储和网络硬件；PaaS公司在网上提供各种开发和分发应用的解决方案，比如虚拟服务器和操作系统；SaaS主要是进行网页服务。 3、公有云、专有云、私有云、混合云的概念及优缺点公有云：是面向大众提供计算资源的服务。由商业机构、学术机构或政府机构拥有、管理和运营，公有云在服务提供商的场所内部署。用户通过互联网使用云服务，根据使用情况付费或通过订购的方式付费。优点是成本低、扩展性非常好，缺点是对于云端的资源缺乏控制、保密数据的安全性、网络性能和匹配性问题。 私有云：云平台的资源为包含多个用户的单一组织专有。私有云可由该组织、第三方或两者联合拥有、管理和运营。部署场所可以在机构内部，也可以在外部。内部私有云也称为内部云，由组织在自己的数据中心内构件，该形式在规模和资源可扩展性上有局限，但是却有利于标准化云服务管理流程和安全性，组织仍然要为物理资源承担资金和维护成本，这种方式适合那些需要对应用、平台配置和安全机制完全控制的机构。外部私有云部署在组织外部，由第三方机构负责管理。第三方为该组织提供专有的云环境，并保证私密和机密性。该方案相对内部私有云成本更低，也更便于扩展业务规模。 混合云：在混合云模式中，云平台由两种不同模式（私有或公有）云平台组合而成。这些平台依然是独立实体，但是利用标准和或专有技术实现绑定，彼此之间能进行数据和应用的移植。应用混合云模式，一个机构可以将次要的应用和数据部署到公有云上，充分利用公有云在扩展性和成本上的优势。同时将任务关键型应用和数据放在私有云中，安全性更高。 专有云：企业客户可在自己的数据中心内构建专属式阿里云服务。把云计算的技术架构输出到政企客户的IDC机房，以专有云的方式为客户提供云计算和大数据的基础服务，同时满足客户安全合规和数据保密的要求。提供了包括云计算、大数据、企业级互联网架构、安全等全栈云产品的API和SDK，极大地满足了客户定制化要求和生态建设。 4、什么是ZStack?ZStack是下一代开源的云计算IaaS软件。它主要面向的是未来的智能数据中心，通过提供完善的APIs来管理包括计算、存储和网络在内的数据中心的各种资源。用户可以基于ZStack构建自己的智能数据中心，也可以在稳定的ZStack智商搭建灵活的云应用场景，例如VDI(虚拟桌面基础架构,PaaS, SaaS等等。 5、阿里云专有云产品有哪些？基于阿里云飞天架构的全量云平台（Apsara Stack Enterprise）, 基于ZStack的轻量级云平台(ZStack for Alibaba Cloud), 基于阿里云飞天架构的轻量级大数据平台(Apsara Stack Insight)，支持Docker企业版的敏捷云应用平台(Apsara Stack Agility) 全量云平台：基于飞天分布式操作系统，有互联网中间件及应用（SLS, MNS, ROS, API网关, DRDS, EDAS, MQ, CSB, ARMS, Quick BI）,基础架构（ECS, VPC, SLB, 容器服务）,数据库(RDS, OSS, OTS, KVStore, DTS, Oceanbase)，大数据处理(大数据计算服务,Data IDE, AnalyticDB, 流计算, 机器学习, Dtboost, 关系网络分析)，安全（云盾），以及对外的开放接口（API+SDK）,同时保证了统一管理与运维和企业级可靠性。 轻量级云平台：基于计算（KVM/VMWARE),存储（DAS/NAS/SAN/DFS）(本地存储/NFS存储/SAN存储/分布式存储)和网络（VLAN/VXLAN）资源，构建了产品级的混合云IaaS平台ZStack，包括云主机管理、物理机管控、存储调度、网络功能、账号计费、实时监控，对外提供各种开放接口（API+SDK），同时提供自动化管理和运维、无缝对接阿里云公共云，保证了简单（Simple）、健壮（Strong）、弹性（Scalable）、智能（Smart）。 轻量级大数据平台：基于IDC基础架构，开发了大数据开发套件DataIDE(数据集成、数据开发、离线调度、数据质量、数据管理)、关系网络分析1+（关系挖掘、可视分析、多源融合、业务智能）、大数据计算服务MaxCompute(SQL、MR、Graph、多租户、安全机制)、分析型数据库AnalyticDB（自由计算、混合存储、多租户、实时数据、安全机制），对外提供开放接口（标准SQL+API+SDK）,同时实现了自动化安装部署和可视化运维管理，实现轻量级、模块化、开放性和可定制。 敏捷云应用平台：在IDC基础架构上，基于Docker引擎、容器存储（本地存储/NFS存储/SAN存储/分布式存储）、容器网络（VLAN/VXLAN）资源，开发了企业级容器应用平台，包含资源调度、微服务、DevOps、日志、监控、安全、镜像管理等，并对外开放各种接口（全兼容Docker API, CLI和三方工具），并提供自动化管理和运维、无缝对接阿里云公有云，提供敏捷、弹性、开放、混合云。 6、虚拟化 vs 容器化虚拟化：对于系统虚拟化技术来说，虚拟层为用户提供了一个完整的虚拟机：包括内核在内的一个完整的系统镜像。CPU虚拟化技术可以为每个用户提供一个独享且和其他用户隔离的系统环境，虚拟层可以为每个用户分配虚拟化后的CPU、内存和IO设备资源。代表是Virtual Box. 容器化：容器为应用程序提供了隔离的运行空间，每个容器内都包含一个独享的完整用户环境空间，并且一个容器内的变动不会影响其他容器的运行环境。为了能达到这种效果，容器技术使用了一系列的系统级别的机制诸如利用Linux namespaces来进行空间隔离，通过文件系统的挂载点来决定容器可以访问哪些文件，通过cgroups来确定每个容器可以利用多少资源。此外容器之间共享同一个系统内核，这样当同一个库被多个容器使用时，内存的使用效率会得到提升。代表是Docker。容器化的优点是可以实现快速部署。 无论是从大小、启动时间还是集成角度来说，容器化都比虚拟化要好。 提到快速部署，不得不提到DevOps(Development和Operations的组合词)是一种重视“软件开发人员（Dev）”和“IT运维技术人员（Ops）”之间沟通合作的文化、运动或惯例。透过自动化“软件交付”和“架构变更”的流程，来使得构建、测试、发布软件能够更加快捷、频繁和可靠。 7、什么是IDC?IDC(Internet Data Center)即互联网数据中心，是为满足互联网业务和企事业信息服务需求而建设的应用基础设施，通过与互联网的高速连接，以丰富的计算、存储、网络和应用资源向服务提供商（SP）、内容提供商（CP）、各种集团客户等提供大规模、高质量、安全可靠的IDC业务。 8、使用云服务器ECS搭建WordPress网站的操作步骤购买ECS实例部署Web环境安装WordPress购买域名备案域名解析 9、Apache、Tomcat、NginxApache和Tomcat都是web网络服务器，两者既有联系又有区别，在进行HTML、PHP、JSP、Perl等开发过程中，需要准确掌握其各自特点，选择最佳的服务器配置。Apache是web服务器（静态解析，如HTML），tomcat是java应用服务器（动态解析，如JSP、PHP）,Tomcat只是一个servlet容器，可以认为是apache的扩展，但是可以独立于apache运行。Apache是普通服务器，本身只支持html即普通网页，可以通过插件支持php，还可以与Tomcat连通（Apache单向链接Tomcat,）Apache HTTP Server主要是静态生成资源并返回到客户端Apache Tomcat主要是动态生成资源并返回客户端虽然Tomcat也可认为是HTTP服务器，但通常它会和Nginx配合使用：动静态资源分离–运用Nginx的反响代理功能分发请求：所有动态资源的请求交给Tomcat，而静态资源的请求（例如图片、视频、CSS、JavaScript文件等）则直接由Nginx返回到浏览器，这样能大大减轻Tomcat的压力。负载均衡，当业务压力增大时，可能一个Tomcat的实例不足以处理，这时可以启动多个Tomcat实例进行水平扩展，而Nginx的负载均衡功能可以把请求通过算法分发到各个不同的实例进行处理。 10、什么是VXLAN？VXLAN由VMWARE、Cisco、Redhat等联合提出的解决方案，这个解决方案最主要是解决VLAN支持虚拟网络数量（4096）过少的问题。因为在公有云上的每一个租户都有不同的VPC，4096明显不够用。就有了VXLAN，它可以支持1600万个虚拟网络，基本上公有云是够用的。 11、什么是中间件？IDC给中间件的定义是中间件是一种独立的系统软件或服务程序，分布式应用软件借助这种软件在不同的技术之间共享资源，中间件位于客户机服务器的操作系统之上，管理计算资源和网络通信。 我国学术界一般认可的定义是中间件是指网络环境下处于操作系统、数据库等系统软件和应用软件之间的一种起连接作用的分布式软件，主要解决异构网络环境下分布式应用软件的互连与互操作问题，提供标准接口、协议，屏蔽实现细节，提高应用系统易移植性。 阿里云中间件由企业级分布式应用服务EDAS,分布式关系型数据库服务 DRDS, 消息队列MQ,业务实时监控服务ARMS，云服务总线CSB这五剑客组成 中间件的出现解决了异构分布网络环境下软件系统的通信、互操作、协同、事务、安全等共性问题。因为其在系统中的重要性，中间件与操作系统、数据库并称为系统软件的三驾马车。 12、什么是VPC?VPC虚拟网络提供弹性公网IP,负载均衡SLB,NAT网关,高速通道。 13、什么是对象存储OSS?OSS是基于阿里云飞天分布式系统的海量、安全和高可靠的云存储服务。RESTful API的平台无关性，容量和处理能力的弹性扩展，按实际容量付费真正使您专注于核心业务。存储扩展、数据共享、高速传输、成本和数据安全性等一系列挑战，为此阿里云云存储应运而生。 14、什么是SOA?SOA是一种设计方法，其中包含多个服务，而服务之间通过配合最终会提供一系列功能。一个服务通常以独立的形式存在于操作系统进程中。服务之间通过网络调用，而非采用进程内调用的方式进行通信。SOA（面向服务架构）与B/S,C/S架构是目前最流行三种Web服务的基础架构。","categories":[],"tags":[]},{"title":"","slug":"python4","date":"2017-04-25T08:48:23.000Z","updated":"2017-04-25T08:58:38.000Z","comments":true,"path":"2017/04/25/python4/","link":"","permalink":"http://yoursite.com/child/2017/04/25/python4/","excerpt":"","text":"Introduction to Python - Lesson 4Pattern12 Reference here","categories":[],"tags":[]},{"title":"","slug":"python3","date":"2017-04-24T06:23:36.000Z","updated":"2017-04-24T06:38:48.000Z","comments":true,"path":"2017/04/24/python3/","link":"","permalink":"http://yoursite.com/child/2017/04/24/python3/","excerpt":"","text":"Introduction to Python - Lesson 3Dictionary/Hash Table1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253$ python&gt;&gt;&gt; d=&#123;&#125;&gt;&gt;&gt; d[&apos;a&apos;]=&apos;alpha&apos;&gt;&gt;&gt; d[&apos;o&apos;]=&apos;omega&apos;&gt;&gt;&gt; d[&apos;g&apos;]=&apos;gamma&apos;&gt;&gt;&gt; d[&apos;a&apos;]&apos;alpha&apos;&gt;&gt;&gt; d.get(x)&gt;&gt;&gt; d.get(a)&apos;alpha&apos;&gt;&gt;&gt; &apos;a&apos; in dTrue&gt;&gt;&gt; &apos;x&apos; in dFalse&gt;&gt;&gt; d.keys()[&apos;a&apos;, &apos;g&apos;, &apos;o&apos;]&gt;&gt;&gt; d.values()[&apos;alpha&apos;, &apos;gamma&apos;, &apos;omega&apos;]&gt;&gt;&gt; for k in sorted(d.keys()): print &apos;key:&apos;, k, &apos;-&gt;&apos;, d[k]...key: a -&gt; alphakey: g -&gt; gammakey: o -&gt; omega&gt;&gt;&gt; d.items()[(&apos;a&apos;, &apos;alpha&apos;), (&apos;g&apos;, &apos;gamma&apos;), (&apos;o&apos;, &apos;omega&apos;)]&gt;&gt;&gt; for tuplein d.items():print tuple...(&apos;a&apos;, &apos;alpha&apos;)(&apos;g&apos;, &apos;gamma&apos;)(&apos;o&apos;, &apos;omega&apos;)&gt;&gt;&gt; vi hello.pyimport sysdef Cat(filename): f=open(filename, &apos;rU&apos;) text=f.read() print text f.close() def main(): Cat(sys.argv[1]) if __name__==&apos;__main__&apos;: main()&gt;&gt;&gt; &gt;small.txtRoses are redAre belong to you!&gt;&gt;&gt; python hello.py small.txtRoses are redAre belong to you!&gt;&gt;&gt; &apos;aaa bbb ccc&apos;.split()[&apos;aaa&apos;, &apos;bbb&apos;, &apos;ccc&apos;] Reference here","categories":[],"tags":[]},{"title":"","slug":"python2","date":"2017-04-21T09:30:53.000Z","updated":"2017-04-21T09:50:28.000Z","comments":true,"path":"2017/04/21/python2/","link":"","permalink":"http://yoursite.com/child/2017/04/21/python2/","excerpt":"","text":"Introduction to Python - Lesson 2Syntax123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475$ python&gt;&gt;&gt; a=[1,2,3]&gt;&gt;&gt; a[1, 2, 3]&gt;&gt;&gt; a=[1,2,&apos;a&apos;]&gt;&gt;&gt; a[1, 2, &apos;a&apos;]&gt;&gt;&gt; len(a)3&gt;&gt;&gt; [1,2,&apos;a&apos;]+[3,4][1,2,&apos;a&apos;,3,4]&gt;&gt;&gt; a=[1,2,3]&gt;&gt;&gt; b=a&gt;&gt;&gt; b[1,2,3]&gt;&gt;&gt; a[0]1&gt;&gt;&gt; a[0]=13&gt;&gt;&gt; a[13, 2, 3]&gt;&gt;&gt; b[13, 2, 3]&gt;&gt;&gt; b=a[:]&gt;&gt;&gt; b[13, 2, 3]&gt;&gt;&gt; a==bTrue&gt;&gt;&gt; a[1:3]&gt;&gt;&gt; [2, 3]&gt;&gt;&gt; a[:-1][13, 2]&gt;&gt;&gt; for num in a: print num...1323&gt;&gt;&gt; 2 in aTrue&gt;&gt;&gt; 14 in aFalse&gt;&gt;&gt; a.append(4)&gt;&gt;&gt; a[13, 2, 3, 4]&gt;&gt;&gt; a.pop(0)13&gt;&gt;&gt; a[2, 3, 4]&gt;&gt;&gt; del a[1]&gt;&gt;&gt; a[2, 4]&gt;&gt;&gt; b=12&gt;&gt;&gt; a=b&gt;&gt;&gt; del a&gt;&gt;&gt; b12&gt;&gt;&gt; a=[4,2,1,6]&gt;&gt;&gt; sorted(a)[1, 2, 4, 6]&gt;&gt;&gt; a[4, 2, 1, 6]&gt;&gt;&gt; a=sorted(a)&gt;&gt;&gt; a[1, 2, 4, 6]&gt;&gt;&gt; a=[&apos;ccc&apos;, &apos;aaa&apos;, &apos;d&apos;]&gt;&gt;&gt; sorted(a)[&apos;aaa&apos;, &apos;ccc&apos;, &apos;d&apos;]&gt;&gt;&gt; sorted(a, key=len)[&apos;d&apos;, &apos;ccc&apos;, &apos;aaa&apos;]&gt;&gt;&gt; def last(s):return s[-1]&gt;&gt;&gt; sorted(a, key=last)[&apos;aaa&apos;, &apos;ccc&apos;, &apos;d&apos;]&gt;&gt;&gt; &apos;:&apos;.join(a)&apos;ccc:aaa:d&apos;&gt;&gt;&gt; range(5)[0, 1, 2, 3, 4] Reference here","categories":[],"tags":[]},{"title":"","slug":"python1","date":"2017-04-20T09:10:55.000Z","updated":"2017-04-21T09:33:06.000Z","comments":true,"path":"2017/04/20/python1/","link":"","permalink":"http://yoursite.com/child/2017/04/20/python1/","excerpt":"","text":"Introduction to Python - Lesson 1The reason why I learn Python is to prepare for Machine Learning. Quick StartDownload PythonDownload here if you haven’t yet. Check if you have already downloaded Python 1$ python --version If the terminal displays as below, you have already downloaded it; Otherwise you haven’t. 1Python 2.7.10 Run a Python FileCreate a folder 1$ mkdir python Make a file 1$ &gt;hello.py Edit hello.py 1$ vi hello.py Enter “i” and input the following 1234567# Define a main() function that prints a little greetingdef main(): print &quot;Hello Alice&quot;# This is the standard boilerplate that calls the main() function.if __name__ == &apos;__main__&apos;: main() Press esc, then input “:x” to exitInput1python hello.py The result is1Hello Alice The above example shows how to make a basic python file, then we will see how to use the existing functions within Python, rewrite hello.py as following 12345678910111213import sysdef Hello(name): name = name + &apos;!!!&apos; print &apos;Hello&apos;, name# Define a main() function that prints a little greetingdef main(): Hello(sys.argv[1])# This is the standard boilerplate that calls the main() function.if __name__ == &apos;__main__&apos;: main() Press esc, then input “:x” to exitInput 1python hello.py Alice The result is 1Hello Alice!!! The above example shows how to make inputs through command line, then we will see how to use if/else function, rewrite hello.py as following 1234567891011121314151617import sysdef Hello(name): if name == &apos;Alice&apos; or name == &apos;Nick&apos;: name = name + &apos;???&apos; else: name = name + &apos;%%%&apos; name = name + &apos;!!!&apos; print &apos;Hello&apos;, name# Define a main() function that prints a little greetingdef main(): Hello(sys.argv[1])# This is the standard boilerplate that calls the main() function.if __name__ == &apos;__main__&apos;: main() Press esc, then input “:x” to exitInput 1python hello.py Alice The result is 1Hello Alice???!!! Run Python Command1$ python The usage of ‘’ and “” 12345&gt;&gt;&gt; &quot;I \\&quot;love\\&quot; this exercise&quot;&gt;&gt;&gt; &apos;I &quot;love&quot; this exercise&apos;&gt;&gt;&gt; &quot;isn&apos;t&quot;&gt;&gt;&gt; &quot;isn&apos;t&quot;&gt;&gt;&gt; Press cmd+d to exit 1&gt;&gt;&gt; help(sys) Long press q to exit This is the first day I learned Python, keep going! Reference here","categories":[],"tags":[]},{"title":"","slug":"Hexo","date":"2017-04-19T02:24:33.000Z","updated":"2017-04-19T12:50:47.000Z","comments":true,"path":"2017/04/19/Hexo/","link":"","permalink":"http://yoursite.com/child/2017/04/19/Hexo/","excerpt":"","text":"Create Your Own Blog Using Github &amp; HexoHexo is a fast, simple and powerful blog framework. You write posts in Markdown (or other languages) and Hexo generates static files with a beautiful theme in seconds. Quick StartRegister a Github AccountSign up here Install git, node.js &amp; HexoDownload git hereDownload node.js hereDownload Hexo1$ npm install -g hexo-cli More info: Hexo Create Your Blog Initialize your blog locallyCreate a blog folder with any name, enter this folder and make an initialization. 123$ cd your_blog_dir$ hexo init$ npm install Create a repoGo to your github &amp; add a repo(example: your_github_name.github.io) Configure your blog 1vi _config.yml Click i and modify _config.yml as below123456title: Choose a titlesubtitle: Any subtitle you likedescription: Anything you likeauthor: Your namelanguage: zh-CNtimezone: UTC 12345deploy: type: git # 可以在 Github repository 首页的 `Clone or download` 按钮下找到下面的链接 repo: https://github.com/your_github_name/your_github_name.github.io branch: master Here we need to pay attention to 3 things:1) After each “:” there is an empty space.2) There is an empty space before “type”, “repo” and “branch” under deploy.3) The repo needs to be https://github.com/your_github_name/your_github_name.github.io, otherwise there might be 404 DeployMake sure your blog works perfectly before the deployment.1$ hexo s Go to your local blog 123$ hexo clean$ hexo g$ hexo d Go to your remote blog","categories":[],"tags":[]}]}