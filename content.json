{"meta":{"title":"Hannah Dong","subtitle":"Live well, love lots, and laugh often.","description":null,"author":"Hannah Dong","url":"http://yoursite.com/child"},"pages":[],"posts":[{"title":"","slug":"python2","date":"2017-04-21T09:30:53.000Z","updated":"2017-04-21T09:50:28.000Z","comments":true,"path":"2017/04/21/python2/","link":"","permalink":"http://yoursite.com/child/2017/04/21/python2/","excerpt":"","text":"Introduction to Python - Lesson 2Syntax123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475$ python&gt;&gt;&gt; a=[1,2,3]&gt;&gt;&gt; a[1, 2, 3]&gt;&gt;&gt; a=[1,2,&apos;a&apos;]&gt;&gt;&gt; a[1, 2, &apos;a&apos;]&gt;&gt;&gt; len(a)3&gt;&gt;&gt; [1,2,&apos;a&apos;]+[3,4][1,2,&apos;a&apos;,3,4]&gt;&gt;&gt; a=[1,2,3]&gt;&gt;&gt; b=a&gt;&gt;&gt; b[1,2,3]&gt;&gt;&gt; a[0]1&gt;&gt;&gt; a[0]=13&gt;&gt;&gt; a[13, 2, 3]&gt;&gt;&gt; b[13, 2, 3]&gt;&gt;&gt; b=a[:]&gt;&gt;&gt; b[13, 2, 3]&gt;&gt;&gt; a==bTrue&gt;&gt;&gt; a[1:3]&gt;&gt;&gt; [2, 3]&gt;&gt;&gt; a[:-1][13, 2]&gt;&gt;&gt; for num in a: print num...1323&gt;&gt;&gt; 2 in aTrue&gt;&gt;&gt; 14 in aFalse&gt;&gt;&gt; a.append(4)&gt;&gt;&gt; a[13, 2, 3, 4]&gt;&gt;&gt; a.pop(0)13&gt;&gt;&gt; a[2, 3, 4]&gt;&gt;&gt; del a[1]&gt;&gt;&gt; a[2, 4]&gt;&gt;&gt; b=12&gt;&gt;&gt; a=b&gt;&gt;&gt; del a&gt;&gt;&gt; b12&gt;&gt;&gt; a=[4,2,1,6]&gt;&gt;&gt; sorted(a)[1, 2, 4, 6]&gt;&gt;&gt; a[4, 2, 1, 6]&gt;&gt;&gt; a=sorted(a)&gt;&gt;&gt; a[1, 2, 4, 6]&gt;&gt;&gt; a=[&apos;ccc&apos;, &apos;aaa&apos;, &apos;d&apos;]&gt;&gt;&gt; sorted(a)[&apos;aaa&apos;, &apos;ccc&apos;, &apos;d&apos;]&gt;&gt;&gt; sorted(a, key=len)[&apos;d&apos;, &apos;ccc&apos;, &apos;aaa&apos;]&gt;&gt;&gt; def last(s):return s[-1]&gt;&gt;&gt; sorted(a, key=last)[&apos;aaa&apos;, &apos;ccc&apos;, &apos;d&apos;]&gt;&gt;&gt; &apos;:&apos;.join(a)&apos;ccc:aaa:d&apos;&gt;&gt;&gt; range(5)[0, 1, 2, 3, 4] Reference here","categories":[],"tags":[]},{"title":"","slug":"python1","date":"2017-04-20T09:10:55.000Z","updated":"2017-04-21T09:33:06.000Z","comments":true,"path":"2017/04/20/python1/","link":"","permalink":"http://yoursite.com/child/2017/04/20/python1/","excerpt":"","text":"Introduction to Python - Lesson 1The reason why I learn Python is to prepare for Machine Learning. Quick StartDownload PythonDownload here if you haven’t yet. Check if you have already downloaded Python 1$ python --version If the terminal displays as below, you have already downloaded it; Otherwise you haven’t. 1Python 2.7.10 Run a Python FileCreate a folder 1$ mkdir python Make a file 1$ &gt;hello.py Edit hello.py 1$ vi hello.py Enter “i” and input the following 1234567# Define a main() function that prints a little greetingdef main(): print &quot;Hello Alice&quot;# This is the standard boilerplate that calls the main() function.if __name__ == &apos;__main__&apos;: main() Press esc, then input “:x” to exitInput1python hello.py The result is1Hello Alice The above example shows how to make a basic python file, then we will see how to use the existing functions within Python, rewrite hello.py as following 12345678910111213import sysdef Hello(name): name = name + &apos;!!!&apos; print &apos;Hello&apos;, name# Define a main() function that prints a little greetingdef main(): Hello(sys.argv[1])# This is the standard boilerplate that calls the main() function.if __name__ == &apos;__main__&apos;: main() Press esc, then input “:x” to exitInput 1python hello.py Alice The result is 1Hello Alice!!! The above example shows how to make inputs through command line, then we will see how to use if/else function, rewrite hello.py as following 1234567891011121314151617import sysdef Hello(name): if name == &apos;Alice&apos; or name == &apos;Nick&apos;: name = name + &apos;???&apos; else: name = name + &apos;%%%&apos; name = name + &apos;!!!&apos; print &apos;Hello&apos;, name# Define a main() function that prints a little greetingdef main(): Hello(sys.argv[1])# This is the standard boilerplate that calls the main() function.if __name__ == &apos;__main__&apos;: main() Press esc, then input “:x” to exitInput 1python hello.py Alice The result is 1Hello Alice???!!! Run Python Command1$ python The usage of ‘’ and “” 12345&gt;&gt;&gt; &quot;I \\&quot;love\\&quot; this exercise&quot;&gt;&gt;&gt; &apos;I &quot;love&quot; this exercise&apos;&gt;&gt;&gt; &quot;isn&apos;t&quot;&gt;&gt;&gt; &quot;isn&apos;t&quot;&gt;&gt;&gt; Press cmd+d to exit 1&gt;&gt;&gt; help(sys) Long press q to exit This is the first day I learned Python, keep going! Reference here","categories":[],"tags":[]},{"title":"","slug":"Hexo","date":"2017-04-19T02:24:33.000Z","updated":"2017-04-19T12:50:47.000Z","comments":true,"path":"2017/04/19/Hexo/","link":"","permalink":"http://yoursite.com/child/2017/04/19/Hexo/","excerpt":"","text":"Create Your Own Blog Using Github &amp; HexoHexo is a fast, simple and powerful blog framework. You write posts in Markdown (or other languages) and Hexo generates static files with a beautiful theme in seconds. Quick StartRegister a Github AccountSign up here Install git, node.js &amp; HexoDownload git hereDownload node.js hereDownload Hexo1$ npm install -g hexo-cli More info: Hexo Create Your Blog Initialize your blog locallyCreate a blog folder with any name, enter this folder and make an initialization. 123$ cd your_blog_dir$ hexo init$ npm install Create a repoGo to your github &amp; add a repo(example: your_github_name.github.io) Configure your blog 1vi _config.yml Click i and modify _config.yml as below123456title: Choose a titlesubtitle: Any subtitle you likedescription: Anything you likeauthor: Your namelanguage: zh-CNtimezone: UTC 12345deploy: type: git # 可以在 Github repository 首页的 `Clone or download` 按钮下找到下面的链接 repo: https://github.com/your_github_name/your_github_name.github.io branch: master Here we need to pay attention to 3 things:1) After each “:” there is an empty space.2) There is an empty space before “type”, “repo” and “branch” under deploy.3) The repo needs to be https://github.com/your_github_name/your_github_name.github.io, otherwise there might be 404 DeployMake sure your blog works perfectly before the deployment.1$ hexo s Go to your local blog 123$ hexo clean$ hexo g$ hexo d Go to your remote blog","categories":[],"tags":[]}]}